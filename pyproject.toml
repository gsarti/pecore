[build-system]
requires = ["setuptools>=60.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pecore"
description = "Plausibility Evaluation of Context Reliance"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  {name = "Gabriele Sarti", email = "g.sarti@rug.nl"},
]
version = "0.1.0"
requires-python = ">=3.8"
dependencies = [
    "numpy",
    "pandas",
    "sacrebleu",
    "datasets",
    "torch",
    "transformers",
    "inseq",
    "tqdm",
    "scikit-learn",
    "stanza",
    "strenum",
    "sentencepiece",
    "tqdm",
    "unbabel-comet",
    "black",
    "pytest",
    "ruff",
]

[project.urls]
homepage = "https://github.com/gsarti/pecore"

[project.scripts]
pecore-viz = "pecore.cli:pecore_viz"

[tool.setuptools]
py-modules = ["pecore"]

[tool.ruff]
target-version = "py38"
exclude = [
    ".git",
    ".vscode",
    ".github",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "htmlcov",
    "dev_examples",
    "dist",
    ".tox",
    "temp",
    "*.egg",
    "venv",
    ".venv",
]
fix = true
ignore = [
    "B006", # mutable default argument
    "C901", # function too complex
    "E501", # line too long (handled by format)
    "E731", # do not assign a lambda expression, use a def
    "E741", # ambiguous variable name
    "F722", # syntax error in forward annotation (as used by jaxtyping)
    "F821", # undefined name
    "PLR2004", # unnamed numerical constants used
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "W191", # indentation contains tabs (handled by format)
]
line-length = 119
select = [
    "E", # pycodestyle errors
    "F", # pyflakes
    "W", # pycodestyle warnings
    "C", # flake8-comprehensions
    #"D", # flake8-docstrings
    "B", # flake8-bugbear
    "I", # isort
    "UP", # flake8-pyupgrade
    "PLC", # flake8-pylint
    "PLE", # flake8-pylint
    "PLR", # flake8-pylint
    "PLW", # flake8-pylint
]
src = ["pecore", "scripts", "tests"]
extend-include = ["*.ipynb"]


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"**/examples/*" = ["B018", "E402"]

[tool.ruff.isort]
known-first-party = ["inseq"]
order-by-type = true

[tool.ruff.pylint]
max-branches = 20

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.ruff.pydocstyle]
convention = "google"
